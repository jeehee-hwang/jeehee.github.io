02. 자바 기본 프로그래밍
 
    자바 프로그램의 구조 
    - 자바 프로그램은 클래스 선언으로 시작되며, 이 안에 메소드, 변수, 상수 등을 모두 선언한다.  C/C++에서 말하는 전역 변수, 전역 함수가 존재할 수 없으며, 이들은 반드시 클래스 내에 캡슐화되어야 한다.
    - 클래스는 class 키워드로 선언한다.
    - 자바에서 화면에 출력할 때 `System.out.println()` 문을 사용하면 된다.
    
    자바의 데이터 타입
    - 자바에는 boolean, char, byte, short, int, long, float, double 등 8개의 기본 타입이 있다.
    - 자바에는 클래스에 대한 레퍼런스, 인터페이스에 대한 레퍼런스, 배열에 대한 레퍼런스 등 3가지 종류의 레퍼런스 타입이 있다.
    - 레퍼런스 타입은 C/C++의 포인터와 비슷하지만 실제 메모리 주소를 가지지는 않는다.
    - 문자열은 기본타입이 아니며 레퍼런스 타입이다.
    - 상수는 final 키워드를 이용하여 초깃값과 함께 선언하며, 프로그램 실행 중에 값이 바뀔 수 없다.
    - 작은 데이터 타입에서 큰 데이터 타입으로 타입 변환은 자동으로 일어난다.
    - 큰 데이터 타입에서 작은 데이터 타입으로 타입 변환은 명시적으로 지정해야 하며 데이터 손실이 발생할 수 있다.
    
    자바에서 키 입력 
    - `System.in` 은 키보드로부터 직접 입력받은 자바의 표준 입력 스트림 객체로서, 입력된 키에 해당하는 바이트 정보를 리턴한다.
    - `Scanner` 클래스를 이용하면 자바에서 키 입력을 쉽게 받을 수 있다. `Scanner` 클래스는 입력된 키를 숫자, 문자, 문자열 등 원하는 타입으로 변환하여 제공한다.
    - `Scanner` 객체는 다음과 같이 생성자에 `System.in` 을 넘겨주는 식으로 생성하며, `System.in` 으로부터 전달받은 바이트 스트림을 사용자가 원하는 데이터 타입으로 변환하여 전달한다.
        `Scanner scanner = new Scanner(System.in);`
    - `Scanner` 클래스를 사용하려면 `Scanner` 클래스의 전체 경로명을 알려주는 `import java.util.Scanner;` 문이 필요하다.
    
    연산자와 조건문 
    - 자바의 연산자는 C/C++와 거의 동일하며, 산술, 증감, 비교, 시프트, 비트, 논리, 조건, 대입 연산자를 제공한다.
    - 자바의 조건문에는 단순 if문, if-else문, 다중 if-else문, 중첩 if-else문,  switch문이 있다.
    - switch문은 값에 따라 여러 실행 경로로 분기하는 경우에 적합하다.
    - switch문의 case에 break문이 생략되면 다음 break문을 만날 때까지 아래로 계속 실행된다.
    - case 문의 값으로는 정수 리터럴, 문자 리터럴, 문지열 리터럴만 사용할 수 있으며, 변수나 식은 사용할 수 없다.
